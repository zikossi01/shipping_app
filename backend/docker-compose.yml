version: "3.8"

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: transportconnect-db
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: transportconnect
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - transportconnect-network

  # Redis for Caching and Sessions
  redis:
    image: redis:7-alpine
    container_name: transportconnect-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --requirepass redis123
    networks:
      - transportconnect-network

  # Backend API
  backend:
    build: .
    container_name: transportconnect-backend
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      NODE_ENV: development
      PORT: 5000
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/transportconnect?authSource=admin
      REDIS_URL: redis://:redis123@redis:6379
      JWT_SECRET: development_jwt_secret_change_in_production
      EMAIL_HOST: smtp.gmail.com
      EMAIL_PORT: 587
      EMAIL_USERNAME: ${EMAIL_USERNAME}
      EMAIL_PASSWORD: ${EMAIL_PASSWORD}
      FRONTEND_URL: http://localhost:5173
    volumes:
      - ./src:/app/src
      - ./uploads:/app/uploads
      - node_modules:/app/node_modules
    depends_on:
      - mongodb
      - redis
    networks:
      - transportconnect-network
    command: npm run dev

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: transportconnect-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
    networks:
      - transportconnect-network

  # MongoDB Express (Database Admin Interface)
  mongo-express:
    image: mongo-express
    container_name: transportconnect-mongo-admin
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password123
      ME_CONFIG_MONGODB_URL: mongodb://admin:password123@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin123
    depends_on:
      - mongodb
    networks:
      - transportconnect-network

  # Redis Commander (Redis Admin Interface)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: transportconnect-redis-admin
    restart: unless-stopped
    ports:
      - "8082:8081"
    environment:
      REDIS_HOSTS: local:redis:6379:0:redis123
      HTTP_USER: admin
      HTTP_PASSWORD: admin123
    depends_on:
      - redis
    networks:
      - transportconnect-network

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local
  node_modules:
    driver: local

networks:
  transportconnect-network:
    driver: bridge
